package day01;
//비트 연산자
//비트(2진법 숫자)에 대한 연산을 한다.
//&, |, ~, ^, <<, >>, >>>
public class Ex07 {
	public static void main(String[] args) {
		byte a = 5; //00000101
		byte b = 20; //0010100
		//& 연산: 2자리가 모두 1일때만 1이 결과값으로 나온다.
		//00000101
		//00010100
		//--------
		//00000100 = 4
		System.out.println(a & b);
	
		// | 연산:둘 중 하나만 1이여도 1이 결과값으로 나온다.
		//00000101
		//00010100
		//--------
		//00010101 = 21
		System.out.println(a | b);
		
		//^ 연산: 두 자리가 다를 때에만 1이 결과값으로 나온다.
		//00000101
		//00010100
		//--------
		//00010001 = 17
		System.out.println(a ^ b);
		
		//-------------2개의 숫자에 대한 연산----------
		
		//~연산: 1은 0으로 0은 1로
		//00010100
		//11101011
		System.out.println(~b);
		
		//<< 연산: 오른쪽에 나온 자릿수 만큼 왼쪽으로 이동한다.
		//a << 2; 비트를 왼쪽으로 2자리 이동한다.
		//00000101 << 2
		//0000010100 -> 자릿수가 8자리에서 10자리? ->맨 왼쪽 2자리를 없애준다
		//00010100 = 20
		System.out.println(a << 2);
		
		//>> 연산: 오른쪽에 나온 자릿수만큼 오른쪽으로 이동한다.
		//단 맨 첫번째 비트를 그대로 가져간다.(맨 왼쪽 자릿수가 1이면 1로 채워준다.)
		//a >> 2; 비트를 오른쪽으로 2자리 이동한다.
		//00000101 >>2
		//0000000101 -> 오른쪽 2자리를 없애준다.
		//00000001 = 1
		System.out.println(a >> 2);
		b = -127; // 10000001
		//b >> 2;
		//1110000001
		//11100000 = -32
		System.out.println(b >> 2);

		// >>> -> 오른쪽 쉬프트연산을 하되 빈자리를 '0'으로만 채워라
		// 10000001 >>> 2
		// 0010000001
		// 00100000 = 32
		System.out.println(b >>> 2);
	}
}
